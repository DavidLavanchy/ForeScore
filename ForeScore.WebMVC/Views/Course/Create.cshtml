@model ForeScore.Models.CourseModels.CourseCreate

@{
    ViewBag.Title = "Create";
}

@Styles.Render("~/Content/css")

@using (Html.BeginForm())
{
    <div class="container">
        <h2>Add A Course</h2>

        <br />

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="row">
            <div class="col-lg-12">
                <div class="panel panel-primary">
                    <div class="panel-heading">Course Information</div>
                    <div class="panel-body panel-primary form-horizontal">

                        <div class="col-lg-6">
                            <div class="form-group">

                                <div class="form-group">
                                    @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.Slope, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.Slope, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.Slope, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.Rating, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.Rating, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.Rating, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.Par, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.Par, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.Par, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.City, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.StateOfResidence, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.EnumDropDownListFor(model => model.StateOfResidence, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.StateOfResidence, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                            </div>
                        </div>


                        <div class="col-lg-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                                </div>
                            </div>


                            <div class="form-group">
                                @Html.LabelFor(model => model.ZipCode, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.ZipCode, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.ZipCode, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.PhoneNumber, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.PhoneNumber, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.PhoneNumber, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.EmailAddress, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.EmailAddress, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.EmailAddress, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.Website, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.Website, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Website, "", new { @class = "text-danger" })
                                </div>
                            </div>

                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="row">
            <div class="col-lg-12">
                <div class="panel panel-primary">
                    <div class="panel-heading">Front Nine</div>
                    <div class="panel-body panel-primary">
                        <table class="table table-bordered table-striped form-horizontal">
                            <thead>
                                <tr>
                                    <th class="hole" scope="col">
                                        Hole
                                    </th>
                                    @for (int i = 0; i < Model.FrontNine.Count; i++)
                                    {
                                        <th scope="col">
                                            @Html.DisplayFor(model => Model.FrontNine[i].HoleNumber, new { @class = "textboxform-control" })
                                            @Html.HiddenFor(model => Model.FrontNine[i].HoleNumber)
                                        </th>
                                    }
                                </tr>
                            </thead>
                            <tbody>
                                <tr>
                                    <th class="par" scope="col">
                                        Par
                                    </th>
                                    @for (int i = 0; i < Model.FrontNine.Count; i++)
                                    {
                                        <td scope="col">
                                            @Html.TextBoxFor(model => Model.FrontNine[i].Par, new { @class = "textboxform-control" })
                                            @Html.ValidationMessageFor(model => Model.FrontNine[i].Par, "", new { @class = "text-danger" })
                                        </td>
                                    }
                                </tr>

                                <tr>
                                    <th class="distance" scope="col">
                                        Distance (Yards)
                                    </th>
                                    @for (int i = 0; i < Model.FrontNine.Count; i++)
                                    {
                                        <td scope="col">
                                            @Html.TextBoxFor(model => Model.FrontNine[i].Distance, new { @class = "textboxform-control" })
                                            @Html.ValidationMessageFor(model => Model.FrontNine[i].Distance, "", new { @class = "text-danger" })
                                        </td>
                                    }
                                </tr>
                            </tbody>

                        </table>
                    </div>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-lg-12">
                <div class="panel panel-primary">
                    <div class="panel-heading">Back Nine</div>
                    <div class="panel-body panel-primary">
                        <table class="table table-bordered table-striped form-horizontal">
                            <thead>
                                <tr>
                                    <th class="hole" scope="col">
                                        Hole
                                    </th>
                                    @for (int i = 0; i < Model.BackNine.Count; i++)
                                    {
                                        <th scope="col">
                                            @Html.DisplayFor(model => Model.BackNine[i].HoleNumber, new { @class = "textboxform-control" })
                                            @Html.HiddenFor(model => Model.BackNine[i].HoleNumber)
                                        </th>
                                    }
                                </tr>
                            </thead>
                            <tbody>
                                <tr>
                                    <th class="par" scope="col">
                                        Par
                                    </th>
                                    @for (int i = 0; i < Model.BackNine.Count; i++)
                                    {
                                        <td scope="col">
                                            @Html.TextBoxFor(model => Model.BackNine[i].Par, new { @class = "textboxform-control" })
                                            @Html.ValidationMessageFor(model => Model.BackNine[i].Par, "", new { @class = "text-danger" })
                                        </td>
                                    }
                                </tr>

                                <tr>
                                    <th class="distance" scope="col">
                                        Distance (Yards)
                                    </th>
                                    @for (int i = 0; i < Model.BackNine.Count; i++)
                                    {
                                        <td scope="col">
                                            @Html.TextBoxFor(model => Model.BackNine[i].Distance, new { @class = "textboxform-control" })
                                            @Html.ValidationMessageFor(model => Model.BackNine[i].Distance, "", new { @class = "text-danger" })
                                        </td>
                                    }
                                </tr>
                            </tbody>

                        </table>
                    </div>
                </div>
            </div>
        </div>


        <br />
        <div class="row">
            <div class="col-lg-5">
                <a href="@Url.Action("Index", "Course")"
                   class="btn btn-block btn-info col-lg-2">
                    Discard Course Create
                </a>
            </div>

            @Html.AntiForgeryToken()
            <div class=" col-lg-2"></div>
            <div class="col-lg-5">

                <button type="submit" value="Create" class="btn btn-block btn-success col-lg-2">Create</button>

            </div>

        </div>

    </div>
}







