@model ForeScore.Models.CommentModels.CommentCreate

@{
    ViewBag.Title = "Comment";
}

<h2>Comment</h2>
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div>
        <h4>PostDetail</h4>
        <hr />
        <dl class="dl-horizontal">

            <dd>
                @Html.DisplayFor(model => model.PostDetail.Title)
            </dd>

            <dd>
                @Html.DisplayFor(model => model.PostDetail.Content)
            </dd>

            @Html.HiddenFor(model => model.PostId)

        </dl>

        <div class="form-group">
            @Html.LabelFor(model => model.Content, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Content, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Content, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>

        @if (Model.PostDetail.RoundId != null)
        {
            <dl>
                <dd>
                    @Html.DisplayFor(model => model.PostDetail.RoundDetail.CourseName)
                </dd>

                <dt>
                    @Html.DisplayNameFor(model => model.PostDetail.RoundDetail.Description)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.PostDetail.RoundDetail.Description)
                </dd>

                <dt>
                    @Html.DisplayNameFor(model => model.PostDetail.RoundDetail.Score)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.PostDetail.RoundDetail.Score)
                </dd>
            </dl>


            <div>
                <table class="table table-bordered">
                    <tr>
                        <td>
                            Hole
                        </td>
                        @for (int i = 0; i < Model.PostDetail.RoundDetail.CourseDetail.Holes.Count; i++)
                        {
                            <td>
                                @Html.DisplayFor(model => Model.PostDetail.RoundDetail.CourseDetail.Holes[i].HoleNumber, new { htmlAttributes = new { @class = "form-control", } })
                            </td>
                        }
                    </tr>
                    <tr>
                        <td>
                            Par
                        </td>
                        @for (int i = 0; i < Model.PostDetail.RoundDetail.CourseDetail.Holes.Count; i++)
                        {
                            <td>
                                @Html.DisplayFor(model => Model.PostDetail.RoundDetail.CourseDetail.Holes[i].Par, new { htmlAttributes = new { @class = "form-control", } })
                            </td>
                        }
                    </tr>
                    <tr>
                        <td>
                            Distance (Yards)
                        </td>
                        @for (int i = 0; i < Model.PostDetail.RoundDetail.CourseDetail.Holes.Count; i++)
                        {
                            <td>
                                @Html.DisplayFor(model => Model.PostDetail.RoundDetail.CourseDetail.Holes[i].Distance, new { htmlAttributes = new { @class = "form-control", } })
                            </td>
                        }
                    </tr>
                    <tr>
                        <td>
                            Score
                        </td>
                        @for (int i = 0; i < Model.PostDetail.RoundDetail.HoleData.Count; i++)
                        {

                            <td>
                                @Html.DisplayFor(model => Model.PostDetail.RoundDetail.HoleData[i].Score, new { htmlAttributes = new { @class = "form-control", } })
                                @Html.HiddenFor(model => Model.PostDetail.RoundDetail.HoleData[i].HoleNumber, new { htmlAttributes = new { @class = "form-control", } })
                            </td>

                        }
                    </tr>
                    <tr>
                        <td>
                            Driving Distance (Yards)
                        </td>
                        @for (int i = 0; i < Model.PostDetail.RoundDetail.HoleData.Count; i++)
                        {

                            <td>
                                @Html.DisplayFor(model => Model.PostDetail.RoundDetail.HoleData[i].DrivingDistance, new { htmlAttributes = new { @class = "form-control", } })
                            </td>

                        }
                    </tr>
                    <tr>
                        <td>
                            Putts
                        </td>
                        @for (int i = 0; i < Model.PostDetail.RoundDetail.HoleData.Count; i++)
                        {

                            <td>
                                @Html.DisplayFor(model => Model.PostDetail.RoundDetail.HoleData[i].Putts, new { htmlAttributes = new { @class = "form-control", } })
                            </td>

                        }
                    </tr>
                    <tr>
                        <td>
                            Fairway Hit
                        </td>
                        @for (int i = 0; i < Model.PostDetail.RoundDetail.HoleData.Count; i++)
                        {

                            <td>
                                @Html.DisplayFor(model => Model.PostDetail.RoundDetail.HoleData[i].FairwayHit, new { htmlAttributes = new { @class = "form-control", } })
                                @Html.DisplayFor(model => Model.PostDetail.RoundDetail.HoleData[i].FairwayHit, new { htmlAttributes = new { @class = "form-control", } })
                            </td>

                        }
                    </tr>
                    <tr>
                        <td>
                            Penalty(s)
                        </td>
                        @for (int i = 0; i < Model.PostDetail.RoundDetail.HoleData.Count; i++)
                        {

                            <td>
                                @Html.DisplayFor(model => Model.PostDetail.RoundDetail.HoleData[i].Penalty, new { htmlAttributes = new { @class = "form-control", } })
                                @Html.DisplayFor(model => Model.PostDetail.RoundDetail.HoleData[i].Penalty, new { htmlAttributes = new { @class = "form-control", } })
                            </td>

                        }
                    </tr>
                </table>
            </div>
        }
        <table class="table table-bordered table-striped">
            <thead>
                <tr>
                    <th> Name</th>
                    <th> Comment</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model.PostDetail.Comments)
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(model => item.Name)
                        </td>
                        <td>
                            @Html.DisplayFor(model => item.Content)
                        </td>
                        @if (item.OwnerId == Model.PostDetail.OwnerId)
                        {
                            <td>
                                @Html.ActionLink("Delete Comment", "CommentDelete", new { id = item.CommentId }) |
                            </td>
                        }
                    </tr>
                }
            </tbody>


        </table>

    </div>
}