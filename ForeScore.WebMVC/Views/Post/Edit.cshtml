@model ForeScore.Models.PostModels.PostEdit

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <h4>PostCreate</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    @Html.HiddenFor(model => model.RoundId)

    @Html.HiddenFor(model => model.PostId)

    @Html.HiddenFor(model => model.RoundDetail.CourseId)

    @Html.HiddenFor(model => model.RoundDetail.CourseDetail.CourseId)

    <div class="form-group">
        @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Content, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Content, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Content, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-default" />
        </div>
    </div>


    if (Model.RoundId != null)
    {
        <dl>
            <dd>
                @Html.DisplayFor(model => model.RoundDetail.CourseName)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.RoundDetail.Description)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.RoundDetail.Description)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.RoundDetail.Score)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.RoundDetail.Score)
            </dd>
        </dl>


        <div>
            <table class="table table-bordered">
                <tr>
                    <td>
                        Hole
                    </td>
                    @for (int i = 0; i < Model.RoundDetail.CourseDetail.FrontNine.Count; i++)
                    {
                        <td>
                            @Html.DisplayFor(model => Model.RoundDetail.CourseDetail.FrontNine[i].HoleNumber, new { htmlAttributes = new { @class = "form-control", } })
                            @Html.HiddenFor(model => Model.RoundDetail.CourseDetail.FrontNine[i].HoleId)
                        </td>
                    }
                </tr>
                <tr>
                    <td>
                        Par
                    </td>
                    @for (int i = 0; i < Model.RoundDetail.CourseDetail.FrontNine.Count; i++)
                    {
                        <td>
                            @Html.DisplayFor(model => Model.RoundDetail.CourseDetail.FrontNine[i].Par, new { htmlAttributes = new { @class = "form-control", } })
                        </td>
                    }
                </tr>
                <tr>
                    <td>
                        Distance (Yards)
                    </td>
                    @for (int i = 0; i < Model.RoundDetail.CourseDetail.FrontNine.Count; i++)
                    {
                        <td>
                            @Html.DisplayFor(model => Model.RoundDetail.CourseDetail.FrontNine[i].Distance, new { htmlAttributes = new { @class = "form-control", } })
                        </td>
                    }
                </tr>
                <tr>
                    <td>
                        Score
                    </td>
                    @for (int i = 0; i < Model.RoundDetail.FrontNine.Count; i++)
                    {

                        <td>
                            @Html.DisplayFor(model => Model.RoundDetail.FrontNine[i].Score, new { htmlAttributes = new { @class = "form-control", } })
                            @Html.HiddenFor(model => Model.RoundDetail.FrontNine[i].HoleDataId, new { htmlAttributes = new { @class = "form-control", } })
                            @Html.HiddenFor(model => Model.RoundDetail.FrontNine[i].HoleNumber, new { htmlAttributes = new { @class = "form-control", } })
                        </td>

                    }
                </tr>
                <tr>
                    <td>
                        Driving Distance (Yards)
                    </td>
                    @for (int i = 0; i < Model.RoundDetail.FrontNine.Count; i++)
                    {

                        <td>
                            @Html.DisplayFor(model => Model.RoundDetail.FrontNine[i].DrivingDistance, new { htmlAttributes = new { @class = "form-control", } })
                        </td>

                    }
                </tr>
                <tr>
                    <td>
                        Putts
                    </td>
                    @for (int i = 0; i < Model.RoundDetail.FrontNine.Count; i++)
                    {

                        <td>
                            @Html.DisplayFor(model => Model.RoundDetail.FrontNine[i].Putts, new { htmlAttributes = new { @class = "form-control", } })
                        </td>

                    }
                </tr>
                <tr>
                    <td>
                        Fairway Hit
                    </td>
                    @for (int i = 0; i < Model.RoundDetail.FrontNine.Count; i++)
                    {

                        <td>
                            @Html.DisplayFor(model => Model.RoundDetail.FrontNine[i].FairwayHit, new { htmlAttributes = new { @class = "form-control", } })

                        </td>

                    }
                </tr>
                <tr>
                    <td>
                        Penalty(s)
                    </td>
                    @for (int i = 0; i < Model.RoundDetail.FrontNine.Count; i++)
                    {

                        <td>
                            @Html.DisplayFor(model => Model.RoundDetail.FrontNine[i].Penalty, new { htmlAttributes = new { @class = "form-control", } })

                        </td>

                    }
                </tr>
            </table>
            <br />
            <table class="table table-bordered">
                <tr>
                    <td>
                        Hole
                    </td>
                    @for (int i = 0; i < Model.RoundDetail.CourseDetail.BackNine.Count; i++)
                    {
                        <td>
                            @Html.DisplayFor(model => Model.RoundDetail.CourseDetail.BackNine[i].HoleNumber, new { htmlAttributes = new { @class = "form-control", } })
                            @Html.HiddenFor(model => Model.RoundDetail.CourseDetail.BackNine[i].HoleId)
                        </td>
                    }
                </tr>
                <tr>
                    <td>
                        Par
                    </td>
                    @for (int i = 0; i < Model.RoundDetail.CourseDetail.BackNine.Count; i++)
                    {
                        <td>
                            @Html.DisplayFor(model => Model.RoundDetail.CourseDetail.BackNine[i].Par, new { htmlAttributes = new { @class = "form-control", } })
                        </td>
                    }
                </tr>
                <tr>
                    <td>
                        Distance (Yards)
                    </td>
                    @for (int i = 0; i < Model.RoundDetail.CourseDetail.BackNine.Count; i++)
                    {
                        <td>
                            @Html.DisplayFor(model => Model.RoundDetail.CourseDetail.BackNine[i].Distance, new { htmlAttributes = new { @class = "form-control", } })
                        </td>
                    }
                </tr>
                <tr>
                    <td>
                        Score
                    </td>
                    @for (int i = 0; i < Model.RoundDetail.BackNine.Count; i++)
                    {

                        <td>
                            @Html.DisplayFor(model => Model.RoundDetail.BackNine[i].Score, new { htmlAttributes = new { @class = "form-control", } })
                            @Html.HiddenFor(model => Model.RoundDetail.BackNine[i].HoleDataId, new { htmlAttributes = new { @class = "form-control", } })
                            @Html.HiddenFor(model => Model.RoundDetail.BackNine[i].HoleNumber, new { htmlAttributes = new { @class = "form-control", } })
                        </td>

                    }
                </tr>
                <tr>
                    <td>
                        Driving Distance (Yards)
                    </td>
                    @for (int i = 0; i < Model.RoundDetail.BackNine.Count; i++)
                    {

                        <td>
                            @Html.DisplayFor(model => Model.RoundDetail.BackNine[i].DrivingDistance, new { htmlAttributes = new { @class = "form-control", } })
                        </td>

                    }
                </tr>
                <tr>
                    <td>
                        Putts
                    </td>
                    @for (int i = 0; i < Model.RoundDetail.BackNine.Count; i++)
                    {

                        <td>
                            @Html.DisplayFor(model => Model.RoundDetail.BackNine[i].Putts, new { htmlAttributes = new { @class = "form-control", } })
                        </td>

                    }
                </tr>
                <tr>
                    <td>
                        Fairway Hit
                    </td>
                    @for (int i = 0; i < Model.RoundDetail.BackNine.Count; i++)
                    {

                        <td>
                            @Html.DisplayFor(model => Model.RoundDetail.BackNine[i].FairwayHit, new { htmlAttributes = new { @class = "form-control", } })

                        </td>

                    }
                </tr>
                <tr>
                    <td>
                        Penalty(s)
                    </td>
                    @for (int i = 0; i < Model.RoundDetail.BackNine.Count; i++)
                    {

                        <td>
                            @Html.DisplayFor(model => Model.RoundDetail.BackNine[i].Penalty, new { htmlAttributes = new { @class = "form-control", } })

                        </td>

                    }
                </tr>
            </table>
        </div>
    }
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
