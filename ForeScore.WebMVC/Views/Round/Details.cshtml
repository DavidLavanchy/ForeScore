@model ForeScore.Models.RoundModels.RoundDetail

@{
    ViewBag.Title = "Details";
}

<h2>Details</h2>

<div>
    <h4>Round Details</h4>
    <hr />
    <dl class="dl-horizontal">

        @Html.HiddenFor(model => model.RoundId)

        <dd>
            @Html.DisplayFor(model => model.CourseName)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Description)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Description)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Score)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Score)
        </dd>

    </dl>


    <div>
        <table class="table table-bordered">
            <tr>
                <td>
                    Hole
                </td>
                @for (int i = 0; i < Model.CourseDetail.FrontNine.Count; i++)
                {
                    <td>
                        @Html.DisplayFor(model => Model.CourseDetail.FrontNine[i].HoleNumber, new { htmlAttributes = new { @class = "form-control", } })
                    </td>
                }
            </tr>
            <tr>
                <td>
                    Par
                </td>
                @for (int i = 0; i < Model.CourseDetail.FrontNine.Count; i++)
                {
                    <td>
                        @Html.DisplayFor(model => Model.CourseDetail.FrontNine[i].Par, new { htmlAttributes = new { @class = "form-control", } })
                    </td>
                }
            </tr>
            <tr>
                <td>
                    Distance (Yards)
                </td>
                @for (int i = 0; i < Model.CourseDetail.FrontNine.Count; i++)
                {
                    <td>
                        @Html.DisplayFor(model => Model.CourseDetail.FrontNine[i].Distance, new { htmlAttributes = new { @class = "form-control", } })
                    </td>
                }
            </tr>
            <tr>
                <td>
                    Score
                </td>
                @for (int i = 0; i < Model.FrontNine.Count; i++)
                {

                    <td>
                        @Html.DisplayFor(model => Model.FrontNine[i].Score, new { htmlAttributes = new { @class = "form-control", } })
                        @Html.HiddenFor(model => Model.FrontNine[i].HoleNumber, new { htmlAttributes = new { @class = "form-control", } })
                    </td>

                }
            </tr>
            <tr>
                <td>
                    Driving Distance (Yards)
                </td>
                @for (int i = 0; i < Model.FrontNine.Count; i++)
                {

                    <td>
                        @Html.DisplayFor(model => Model.FrontNine[i].DrivingDistance, new { htmlAttributes = new { @class = "form-control", } })
                    </td>

                }
            </tr>
            <tr>
                <td>
                    Putts
                </td>
                @for (int i = 0; i < Model.FrontNine.Count; i++)
                {

                    <td>
                        @Html.DisplayFor(model => Model.FrontNine[i].Putts, new { htmlAttributes = new { @class = "form-control", } })
                    </td>

                }
            </tr>
            <tr>
                <td>
                    Fairway Hit
                </td>
                @for (int i = 0; i < Model.FrontNine.Count; i++)
                {

                    <td>
                        @Html.DisplayFor(model => Model.FrontNine[i].FairwayHit, new { htmlAttributes = new { @class = "form-control", } })
                    </td>

                }
            </tr>
            <tr>
                <td>
                    Penalty(s)
                </td>
                @for (int i = 0; i < Model.FrontNine.Count; i++)
                {

                    <td>
                        @Html.DisplayFor(model => Model.FrontNine[i].Penalty, new { htmlAttributes = new { @class = "form-control", } })
                    </td>

                }
            </tr>
        </table>
        <br />
        <table class="table table-bordered">
            <tr>
                <td>
                    Hole
                </td>
                @for (int i = 0; i < Model.CourseDetail.BackNine.Count; i++)
                {
                    <td>
                        @Html.DisplayFor(model => Model.CourseDetail.BackNine[i].HoleNumber, new { htmlAttributes = new { @class = "form-control", } })
                    </td>
                }
            </tr>
            <tr>
                <td>
                    Par
                </td>
                @for (int i = 0; i < Model.CourseDetail.BackNine.Count; i++)
                {
                    <td>
                        @Html.DisplayFor(model => Model.CourseDetail.BackNine[i].Par, new { htmlAttributes = new { @class = "form-control", } })
                    </td>
                }
            </tr>
            <tr>
                <td>
                    Distance (Yards)
                </td>
                @for (int i = 0; i < Model.CourseDetail.BackNine.Count; i++)
                {
                    <td>
                        @Html.DisplayFor(model => Model.CourseDetail.BackNine[i].Distance, new { htmlAttributes = new { @class = "form-control", } })
                    </td>
                }
            </tr>
            <tr>
                <td>
                    Score
                </td>
                @for (int i = 0; i < Model.BackNine.Count; i++)
                {

                    <td>
                        @Html.DisplayFor(model => Model.BackNine[i].Score, new { htmlAttributes = new { @class = "form-control", } })
                        @Html.HiddenFor(model => Model.BackNine[i].HoleNumber, new { htmlAttributes = new { @class = "form-control", } })
                    </td>

                }
            </tr>
            <tr>
                <td>
                    Driving Distance (Yards)
                </td>
                @for (int i = 0; i < Model.BackNine.Count; i++)
                {

                    <td>
                        @Html.DisplayFor(model => Model.BackNine[i].DrivingDistance, new { htmlAttributes = new { @class = "form-control", } })
                    </td>

                }
            </tr>
            <tr>
                <td>
                    Putts
                </td>
                @for (int i = 0; i < Model.BackNine.Count; i++)
                {

                    <td>
                        @Html.DisplayFor(model => Model.BackNine[i].Putts, new { htmlAttributes = new { @class = "form-control", } })
                    </td>

                }
            </tr>
            <tr>
                <td>
                    Fairway Hit
                </td>
                @for (int i = 0; i < Model.BackNine.Count; i++)
                {

                    <td>
                        @Html.DisplayFor(model => Model.BackNine[i].FairwayHit, new { htmlAttributes = new { @class = "form-control", } })
                    </td>

                }
            </tr>
            <tr>
                <td>
                    Penalty(s)
                </td>
                @for (int i = 0; i < Model.BackNine.Count; i++)
                {

                    <td>
                        @Html.DisplayFor(model => Model.BackNine[i].Penalty, new { htmlAttributes = new { @class = "form-control", } })
                    </td>

                }
            </tr>
        </table>
    </div>

    <dl>

        <dt>
            @Html.DisplayNameFor(model => model.IsPublic)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.IsPublic)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.IsFeatured)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.IsFeatured)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.DateOfRound)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.DateOfRound)
        </dd>

    </dl>
</div>
<p>
    @Html.ActionLink("Edit", "Edit", new { id = Model.RoundId }) |
    @Html.ActionLink("Back to List", "Index")
</p>
